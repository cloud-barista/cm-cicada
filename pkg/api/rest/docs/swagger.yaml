definitions:
  github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  github_com_cloud-barista_cm-cicada_pkg_api_rest_model.Data:
    properties:
      default_args:
        $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_model.DefaultArgs'
      description:
        type: string
      task_groups:
        items:
          $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_model.TaskGroup'
        type: array
    required:
    - default_args
    - task_groups
    type: object
  github_com_cloud-barista_cm-cicada_pkg_api_rest_model.DefaultArgs:
    properties:
      email:
        type: string
      email_on_failure:
        type: boolean
      email_on_retry:
        type: boolean
      owner:
        type: string
      retries:
        description: 'default: 1'
        type: integer
      retry_delay_sec:
        description: 'default: 300'
        type: integer
      start_date:
        type: string
    required:
    - owner
    - start_date
    type: object
  github_com_cloud-barista_cm-cicada_pkg_api_rest_model.Params:
    properties:
      properties: {}
      required:
        items:
          type: string
        type: array
    required:
    - properties
    - required
    type: object
  github_com_cloud-barista_cm-cicada_pkg_api_rest_model.ParmaOption:
    properties:
      operator_option_for_use_as_param:
        type: string
      operator_option_value_is_json:
        type: boolean
      params:
        $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_model.Params'
    required:
    - operator_option_for_use_as_param
    - operator_option_value_is_json
    - params
    type: object
  github_com_cloud-barista_cm-cicada_pkg_api_rest_model.Task:
    properties:
      dependencies:
        items:
          type: string
        type: array
      operator:
        type: string
      operator_options:
        items:
          properties:
            name:
              type: string
            value: {}
          required:
          - name
          - value
          type: object
        type: array
      task_component:
        type: string
      task_name:
        type: string
    required:
    - operator
    - operator_options
    - task_component
    - task_name
    type: object
  github_com_cloud-barista_cm-cicada_pkg_api_rest_model.TaskComponent:
    properties:
      created_at:
        type: string
      data:
        $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_model.TaskData'
      id:
        type: string
      updated_at:
        type: string
    required:
    - data
    - id
    type: object
  github_com_cloud-barista_cm-cicada_pkg_api_rest_model.TaskData:
    properties:
      operator:
        type: string
      operator_options:
        items:
          properties:
            name:
              type: string
            value: {}
          required:
          - name
          - value
          type: object
        type: array
      param_option:
        $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_model.ParmaOption'
      task_name:
        type: string
    required:
    - operator
    - operator_options
    - param_option
    - task_name
    type: object
  github_com_cloud-barista_cm-cicada_pkg_api_rest_model.TaskGroup:
    properties:
      description:
        type: string
      task_group_name:
        type: string
      tasks:
        items:
          $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_model.Task'
        type: array
    required:
    - task_group_name
    - tasks
    type: object
  github_com_cloud-barista_cm-cicada_pkg_api_rest_model.Workflow:
    properties:
      created_at:
        type: string
      data:
        $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_model.Data'
      id:
        type: string
      updated_at:
        type: string
    required:
    - data
    - id
    type: object
  github_com_cloud-barista_cm-cicada_pkg_api_rest_model.WorkflowTemplate:
    properties:
      created_at:
        type: string
      data:
        $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_model.Data'
      id:
        type: string
      updated_at:
        type: string
    required:
    - data
    - id
    type: object
  pkg_api_rest_controller.SimpleMsg:
    properties:
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /cicada/health:
    get:
      consumes:
      - application/json
      description: Check Cicada is alive
      produces:
      - application/json
      responses:
        "200":
          description: Successfully get heath state.
          schema:
            $ref: '#/definitions/pkg_api_rest_controller.SimpleMsg'
        "500":
          description: Failed to check health.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
      summary: Check Cicada is alive
      tags:
      - '[Admin] System management'
  /task_component:
    get:
      consumes:
      - application/json
      description: Get a list of task component.
      parameters:
      - description: Page of the task component list.
        in: query
        name: page
        type: string
      - description: Row of the task component list.
        in: query
        name: row
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully get a list of task component.
          schema:
            items:
              $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_model.TaskComponent'
            type: array
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to get a list of task component.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
      summary: List TaskComponent
      tags:
      - '[Task Component]'
    post:
      consumes:
      - application/json
      description: Register the task component.
      parameters:
      - description: task component of the node.
        in: body
        name: TaskComponent
        required: true
        schema:
          $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_model.TaskComponent'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully register the task component
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_model.TaskComponent'
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to register the task component
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
      summary: Create TaskComponent
      tags:
      - '[Task Component]'
  /task_component/{id}:
    delete:
      consumes:
      - application/json
      description: Delete the task component.
      parameters:
      - description: ID of the task component.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully delete the task component
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_model.TaskComponent'
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to delete the task component
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
      summary: Delete TaskComponent
      tags:
      - '[Task Component]'
    get:
      consumes:
      - application/json
      description: Get the task component.
      parameters:
      - description: id of the TaskComponent
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully get the task component
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_model.TaskComponent'
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to get the task component
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
      summary: Get TaskComponent
      tags:
      - '[Task Component]'
  /task_component/{uuid}:
    put:
      consumes:
      - application/json
      description: Update the task component.
      parameters:
      - description: task component to modify.
        in: body
        name: TaskComponent
        required: true
        schema:
          $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_model.TaskComponent'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully update the task component
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_model.TaskComponent'
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to update the task component
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
      summary: Update TaskComponent
      tags:
      - '[Task Component]'
  /workflow:
    get:
      consumes:
      - application/json
      description: Get a workflow list.
      parameters:
      - description: Page of the connection information list.
        in: query
        name: page
        type: string
      - description: Row of the connection information list.
        in: query
        name: row
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully get a workflow list.
          schema:
            items:
              $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_model.Workflow'
            type: array
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to get a workflow list.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
      summary: List Workflow
      tags:
      - '[Workflow]'
    post:
      consumes:
      - application/json
      description: Create a workflow.
      parameters:
      - description: Workflow content
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_model.Workflow'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully create the workflow.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_model.WorkflowTemplate'
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to create DAG.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
      summary: Create Workflow
      tags:
      - '[Workflow]'
  /workflow/{id}:
    delete:
      consumes:
      - application/json
      description: Delete the workflow.
      parameters:
      - description: ID of the workflow.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully delete the workflow
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_model.Workflow'
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to delete the workflow
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
      summary: Delete Workflow
      tags:
      - '[Workflow]'
    get:
      consumes:
      - application/json
      description: Get the workflow.
      parameters:
      - description: ID of the workflow.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully get the workflow.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_model.Workflow'
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to get the workflow.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
      summary: Get Workflow
      tags:
      - '[Workflow]'
    put:
      consumes:
      - application/json
      description: Update the workflow content.
      parameters:
      - description: Workflow to modify.
        in: body
        name: Workflow
        required: true
        schema:
          $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_model.Workflow'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully update the workflow
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_model.Workflow'
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to update the workflow
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
      summary: Update Workflow
      tags:
      - '[Workflow]'
  /workflow/run/{id}:
    post:
      consumes:
      - application/json
      description: Run the workflow.
      parameters:
      - description: Workflow ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully run the workflow.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_model.Workflow'
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to run the Workflow
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
      summary: Run Workflow
      tags:
      - '[Workflow]'
  /workflow_template:
    get:
      consumes:
      - application/json
      description: Get a list of workflow template.
      parameters:
      - description: Page of the workflow template list.
        in: query
        name: page
        type: string
      - description: Row of the workflow template list.
        in: query
        name: row
        type: string
      - description: UUID of the workflow template.
        in: query
        name: uuid
        type: string
      - description: Migration group name.
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully get a list of workflow template.
          schema:
            items:
              $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_model.WorkflowTemplate'
            type: array
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to get a list of workflow template.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
      summary: List WorkflowTemplate
      tags:
      - '[Workflow Template]'
  /workflow_template/{id}:
    get:
      consumes:
      - application/json
      description: Get the workflow template.
      parameters:
      - description: id of the WorkflowTemplate
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully get the workflow template
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_model.WorkflowTemplate'
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to get the workflow template
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-cicada_pkg_api_rest_common.ErrorResponse'
      summary: Get WorkflowTemplate
      tags:
      - '[Workflow Template]'
swagger: "2.0"
